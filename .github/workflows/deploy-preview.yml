name: Deploy Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'

jobs:
  # Build and deploy preview
  deploy-preview:
    name: üîç Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    environment:
      name: preview-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.url }}
      
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üìã Install dependencies
        run: npm ci
        
      - name: üîç Run quick lint check
        run: npm run lint
        
      - name: üèóÔ∏è Build project
        run: npm run build
        env:
          CI: true
          
      - name: üöÄ Deploy to Vercel Preview
        id: deploy
        uses: amondnet/vercel-action@v25
        if: secrets.VERCEL_TOKEN != ''
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: true
          working-directory: ./
          
      - name: üåê Deploy to Netlify Preview
        uses: netlify/actions/cli@master
        if: secrets.NETLIFY_AUTH_TOKEN != ''
        with:
          args: deploy --dir=portfolio/dist --alias=pr-${{ github.event.number }}
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          
      - name: üí¨ Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('üöÄ Preview Deployments')
            );
            
            const commentBody = `## üöÄ Preview Deployments
            
            Your changes have been deployed to preview environments:
            
            | Platform | Status | URL |
            |----------|--------|-----|
            | ‚ö° Vercel | ${steps.deploy.outcome === 'success' ? '‚úÖ Deployed' : '‚è≠Ô∏è Skipped'} | ${steps.deploy.outputs.url || 'N/A'} |
            | üåê Netlify | ${env.NETLIFY_AUTH_TOKEN ? '‚úÖ Deployed' : '‚è≠Ô∏è Skipped'} | ${env.NETLIFY_AUTH_TOKEN ? `https://pr-${{ github.event.number }}--YOUR_SITE_NAME.netlify.app` : 'N/A'} |
            
            ${!env.VERCEL_TOKEN && !env.NETLIFY_AUTH_TOKEN ? '‚ö†Ô∏è **Note**: Deployment secrets not configured. Add VERCEL_TOKEN and/or NETLIFY_AUTH_TOKEN to enable deployments.' : ''}
            
            üîÑ **Auto-updated on every commit to this PR**
            
            ---
            *Generated by GitHub Actions*`;
            
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }