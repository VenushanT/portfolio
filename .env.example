# Environment Variables for Portfolio Project

## Required Secrets for GitHub Actions

### For Vercel Deployment
- `VERCEL_TOKEN`: Your Vercel personal access token
- `VERCEL_ORG_ID`: Your Vercel organization ID  
- `VERCEL_PROJECT_ID`: Your Vercel project ID

### For Netlify Deployment
- `NETLIFY_AUTH_TOKEN`: Your Netlify personal access token
- `NETLIFY_SITE_ID`: Your Netlify site ID

### For Security Scanning
- `SNYK_TOKEN`: Snyk token for vulnerability scanning (optional)

### For Notifications
- `SLACK_WEBHOOK_URL`: Slack webhook URL for deployment notifications (optional)

## How to Set Up Secrets

### 1. Vercel Setup
1. Go to [Vercel Dashboard](https://vercel.com/dashboard)
2. Create a new project or use existing one
3. Get your project ID from project settings
4. Get your org ID from team settings
5. Create a personal access token in account settings

### 2. Netlify Setup
1. Go to [Netlify Dashboard](https://app.netlify.com/)
2. Create a new site or use existing one
3. Get site ID from site settings > General > Site details
4. Create personal access token in User settings > Applications

### 3. Adding Secrets to GitHub
1. Go to your repository on GitHub
2. Navigate to Settings > Secrets and variables > Actions
3. Click "New repository secret"
4. Add each secret with the exact name listed above

## Environment Files

### .env.local (for local development)
```bash
# Copy this to .env.local and fill in your values
VITE_APP_NAME=Portfolio
VITE_APP_VERSION=1.0.0
VITE_API_URL=https://api.yourdomain.com
VITE_ANALYTICS_ID=your-analytics-id
```

### .env.production (for production builds)
```bash
VITE_APP_NAME=Portfolio
VITE_APP_VERSION=1.0.0
VITE_API_URL=https://api.yourdomain.com
VITE_ANALYTICS_ID=your-production-analytics-id
```

## GitHub Environments

The following environments are configured in the workflows:

1. **github-pages**: For GitHub Pages deployment
2. **vercel-production**: For Vercel production deployment
3. **netlify-production**: For Netlify production deployment
4. **preview-{PR_NUMBER}**: For pull request previews
5. **emergency-hotfix**: For emergency deployments

## Security Notes

- Never commit secrets to the repository
- Use GitHub secrets for sensitive information
- Regularly rotate access tokens
- Monitor deployment logs for any exposed information